<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:java="http://www.mulesoft.org/schema/mule/java"
	xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd 
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/java http://www.mulesoft.org/schema/mule/java/current/mule-java.xsd">

	<global-property doc:name="Global Property" doc:id="12a7b1fd-58c9-4f45-9314-a1ca02d581bc" name="common.audit.log4jLogger" value="common.audit.logger" />
	<global-property doc:name="Global Property" doc:id="3c3fe93c-a6fe-42bc-b1e7-d58c7c94dd39" name="common.audit.logPayloadServerHost" value="host" />
	<global-property doc:name="Global Property" doc:id="e1f0f38e-0bf1-4cce-a4ce-39c62fc3c388" name="common.audit.logPayloadServerPort" value="443" />
	<global-property doc:name="Global Property" doc:id="668a6cab-0c1c-449b-aca0-9ec769ccdcae" name="common.audit.logPayloadServerUrl" value="url" />
	
	<global-property doc:name="Global Property" doc:id="11d09e46-01ab-4f5e-b1f6-fe3d32ccc360" name="common.audit.logPayloadServerKey" value="Key" />
	<global-property doc:name="Global Property" doc:id="9fb3475c-2c07-43d5-b89d-65ef830d74a0" name="common.audit.logPayloadServerKeyName" value="KeyName" />
	
	<http:request-config name="HTTP_Post_Payload" doc:name="HTTP Request configuration" doc:id="b4a6c6ff-9ec1-4601-94a2-880035c75ad6" >
		<http:request-connection host="${common.audit.logPayloadServerHost}" port="${common.audit.logPayloadServerPort}" protocol="HTTPS">
			<reconnection >
				<reconnect-forever frequency="5000" />
			</reconnection>
			<tls:context >
				<tls:trust-store path="properties/${config.env}/${resources.http.security.tls-truststore.path}" password="${secure::resources.http.security.tls-truststore.password}" type="${resources.http.security.tls-truststore.type}" insecure="true"/>
			</tls:context>
		</http:request-connection>
	</http:request-config>
	<flow name="frk-setContext">
		<try doc:name="Try" doc:id="3b5a8774-18b5-4ac8-9528-ed8aedff332f" >
			<set-variable value="#[if (payload==null)
	null
else
	payload]" doc:name="frk_messagePayload" doc:id="8997df34-0e3d-4ef0-bb15-477fe38aeb20" variableName="frk_messagePayload" />
			<error-handler >
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="e12a535f-a350-46ce-8c5d-ccab02adf1ea" >
					<set-variable value="#[%dw 2.0
output application/java
---
null]" doc:name="frk_messagePayload" doc:id="6c0ced13-2054-411e-a41c-c55291ac7c95" variableName="frk_messagePayload" />
				</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="SetContext" doc:id="e972206c-50be-4ef5-a701-1ec3d313d549" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="frk_serviceContext" ><![CDATA[%dw 2.0
output application/java
---
{		
		applicationName: p('application.name'),
		applicationInstance: app.name default "-",		
		applicationVersion: p('application.version'),
		serviceName: vars.frk_setContext_in.serviceName,
		serviceType: vars.frk_setContext_in.serviceType,
		env: p('deploy.env')
}]]></ee:set-variable>
				<ee:set-variable variableName="frk_serviceStatus" ><![CDATA[%dw 2.0
output application/java
---
"init"]]></ee:set-variable>
				<ee:set-variable variableName="frk_messageProperties" ><![CDATA[%dw 2.0
output application/java
import * from dw::util::Values
import * from dw::core::Strings
---
(attributes mapObject ((value, key) -> (key):
	if ((typeOf(value) as String) == "Object")
		if (value.class == "org.mule.extension.sqs.api.model.MessageAttributeValue")
			if(value.stringValue?)
				value.stringValue
			else
				value
		else
			value
	else
		value
)) mask field("client_secret") with "*****"]]></ee:set-variable>
				<ee:set-variable variableName="frk_logPayloadLogic" ><![CDATA[%dw 2.0
output application/java
---
if (vars.frk_setContext_in.logPayloadLogic?)
	vars.frk_setContext_in.logPayloadLogic
else 
	p('common.audit.defaultLogPayloadLogic') as String]]></ee:set-variable>
				<ee:set-variable variableName="frk_tracking" ><![CDATA[%dw 2.0
output application/java
var msgCorrelationId = if(attributes == null) null 
	else if (attributes..'x-correlation-id'[0] != null)
	(
		if ((typeOf(attributes..'x-correlation-id'[0]) as String) != "String" and attributes..'x-correlation-id'[0].stringValue?)
			attributes..'x-correlation-id'[0].stringValue
		else
			attributes..'x-correlation-id'[0]
	)
	else if (attributes..'x_correlation_id'[0] != null)
	(
		if ((typeOf(attributes..'x_correlation_id'[0]) as String) != "String" and attributes..'x_correlation_id'[0].stringValue?)
			attributes..'x_correlation_id'[0].stringValue
		else
			attributes..'x_correlation_id'[0]
	)
	else if (attributes..'correlationId'[0] != null)
	(
		if ((typeOf(attributes..'correlationId'[0]) as String) != "String" and attributes..'correlationId'[0].stringValue?)
			attributes..'correlationId'[0].stringValue
		else
			attributes..'correlationId'[0]
	)
	else
		null

var newTransaction = 
	(
		msgCorrelationId == null 
		or
		vars.frk_setContext_in.isRootTransaction == "true"
	) as Boolean
---
{
	correlationId: if (newTransaction)
		(java!java::util::UUID::randomUUID() as String) replace /-/ with ''
	else if (vars.frk_setContext_in.overwriteCorrelationId != null)
		vars.frk_setContext_in.overwriteCorrelationId
	else msgCorrelationId,
	
	serviceId: (java!java::util::UUID::randomUUID() as String) replace /-/ with '',
	
	(isRootTransaction: 'true') if(newTransaction),
	(
		transactionName: if(vars.frk_setContext_in.transactionName?)
			vars.frk_setContext_in.transactionName
		else
			'tx.' ++ (vars.frk_setContext_in.serviceName as String)
	) if(newTransaction)
}
]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<choice doc:name="Choice" doc:id="c4948d44-6ddd-4cf4-bcc8-d2dd91f07d5d" >
			<when expression="#[vars.frk_setContext_in != null]">
				<remove-variable doc:name="Remove frk_setContext_in" doc:id="b20f786c-51a4-4b72-a8e5-66d56360612f" variableName="frk_setContext_in" />
			</when>
		</choice>
		
	</flow>
	<flow name="frk-logStart" doc:id="adf56ee5-f974-47ea-98e3-fb0947c8ecb8" >
		<set-variable value="running" doc:name="frk_serviceStatus" doc:id="f40729b5-8113-4415-a2a0-1759241d404b" variableName="frk_serviceStatus"/>
		<choice doc:name="Choice" doc:id="59ca7579-28bc-4ee4-aed1-617b47eef90a" >
			<when expression="${common.audit.role.logStart}">
				<ee:transform doc:name="MapLog" doc:id="2d52dc68-53dc-4ddf-8a4d-fa1b6e5434a0">
			<ee:message>
			</ee:message>
					<ee:variables >
						<ee:set-variable variableName="frk_logStart" ><![CDATA[%dw 2.0
output application/json indent=false, skipNullOn="everywhere"
---
{
	logType: "_frk_mule_service_audit_",
    correlationId: vars.frk_tracking.correlationId,
    serviceId: vars.frk_tracking.serviceId,
    transactionName: vars.frk_tracking.transactionName,    
    isRootTransaction: vars.frk_tracking.isRootTransaction,

    applicationName: vars.frk_serviceContext.applicationName,
    applicationInstance: vars.frk_serviceContext.applicationInstance,
    applicationVersion: vars.frk_serviceContext.applicationVersion,
    serviceName: vars.frk_serviceContext.serviceName,
    serviceType: vars.frk_serviceContext.serviceType,
    env: vars.frk_serviceContext.env,
	serviceStatus: vars.frk_serviceStatus,
    
    logTimestamp: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ" },
    logRole: "INFO",
    logStep:"START",
    logText:"Service started.",
    (msgPayloadId: vars.frk_tracking.serviceId) if (vars.frk_messagePayload != null and vars.frk_logPayloadLogic == 'ALWAYS'),
    
	(businessKeys:(
					vars.frk_logStart_in.businessKeys map (item,index) -> {nvp: (item.name) ++ "=" ++ item.value}
				   ).nvp joinBy ","
	) if(vars.frk_logStart_in.businessKeys? and sizeOf(vars.frk_logStart_in.businessKeys)>0),
	
	messageProperties: write(vars.frk_messageProperties, "application/json"),
}]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="LogStart" doc:id="6e68d3b8-e1b9-465c-83d9-054981ab8fa3" message="#[vars.frk_logStart]" category="${common.audit.log4jLogger}"/>
				<remove-variable doc:name="Remove frk_logStart" doc:id="1afe02ec-9de7-4b58-9752-ab7d3da108ed" variableName="frk_logStart"/>
				<choice doc:name="Choice" doc:id="a4106bfd-f168-4b5a-9572-6c7067eea3d2">
			<when expression="#[vars.frk_messagePayload != null and vars.frk_logPayloadLogic == 'ALWAYS']">
				<flow-ref doc:name="frk-logInboundPayload" doc:id="ec18b383-317b-4e1d-8d94-a0141bd2e4a6" name="frk-logInboundPayload" />
			</when>
		</choice>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="7a097eb6-3efd-4e00-b262-468361ae7b8a" >
			<when expression="#[vars.frk_logStart_in != null]">
				<remove-variable doc:name="Remove frk_logStart_in" doc:id="4359158e-09eb-4d8f-9197-981693895340" variableName="frk_logStart_in" />
			</when>
		</choice>
	</flow>
	<flow name="frk-logEnd" doc:id="c2665ba7-d0b1-493e-8f8a-ea4dfdc233f7" >
		<set-variable value="completed" doc:name="frk_serviceStatus" doc:id="10c24a75-8da4-46cb-94d1-5b5f7622c44f" variableName="frk_serviceStatus" />
		<choice doc:name="Choice" doc:id="a11584f3-105e-47be-a517-33873c47fa32" >
			<when expression="${common.audit.role.logEnd}">
				<ee:transform doc:name="MapLog" doc:id="a3fa3546-8a36-484c-a7c5-03713704dec3">
			<ee:message>
			</ee:message>
					<ee:variables >
						<ee:set-variable variableName="frk_logEnd" ><![CDATA[%dw 2.0
output application/json indent=false, skipNullOn="everywhere"
---
{
	logType: "_frk_mule_service_audit_",
    correlationId: vars.frk_tracking.correlationId,
    serviceId: vars.frk_tracking.serviceId,
    transactionName: vars.frk_tracking.transactionName,    
    isRootTransaction: vars.frk_tracking.isRootTransaction,

    applicationName: vars.frk_serviceContext.applicationName,
    applicationInstance: vars.frk_serviceContext.applicationInstance,
    applicationVersion: vars.frk_serviceContext.applicationVersion,
    serviceName: vars.frk_serviceContext.serviceName,
    serviceType: vars.frk_serviceContext.serviceType,
    env: vars.frk_serviceContext.env,
	serviceStatus: vars.frk_serviceStatus,
    
    logTimestamp: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ" },
    logRole: "INFO",
    logStep:"END",
    logText:"Service completed.",

	(businessKeys:(
					vars.frk_logEnd_in.businessKeys map (item,index) -> {nvp: (item.name) ++ "=" ++ item.value}
				   ).nvp joinBy ","
	) if(vars.frk_logEnd_in.businessKeys? and sizeOf(vars.frk_logEnd_in.businessKeys)>0)
}]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="LogEnd" doc:id="c3249b0e-ae4a-445a-9143-a49faa4caf3f" message="#[vars.frk_logEnd]" category="${common.audit.log4jLogger}"/>
				<remove-variable doc:name="Remove frk_logEnd" doc:id="8390ac3c-60e5-40c9-9f49-19a4ca4bf22e" variableName="frk_logEnd"/>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="3d69092f-2c95-4ea8-b548-94af0da0b72f" >
			<when expression="#[vars.frk_logEnd_in != null]">
				<remove-variable doc:name="Remove frk_logEnd_in" doc:id="3c308a69-3344-40f3-94ac-a34e58943ed3" variableName=" frk_logEnd_in" />
			</when>
		</choice>
	</flow>
	<flow name="frk-logError" doc:id="b93f5747-1bee-4ad5-9f6c-e7b4b7db9176" >
		<set-variable value="#[if (vars.frk_exception.isNonFatal == 'true')
	'running'
else 
	'error']" doc:name="frk_serviceStatus" doc:id="5ce98416-9d63-402a-a6d1-735701a8c4dd" variableName="frk_serviceStatus" />
		<choice doc:name="Choice" doc:id="dbffdabe-63d2-4b43-b6ff-cf169e804ee1" >
			<when expression="${common.audit.role.logError}">
				<ee:transform doc:name="MapLog" doc:id="7d625903-de7c-4452-a17d-3d4a3c7e4c99">
			<ee:message>
			</ee:message>
					<ee:variables>
						<ee:set-variable variableName="frk_logError"><![CDATA[%dw 2.0
output application/json indent=false, skipNullOn="everywhere"
---
{
	logType: "_frk_mule_service_audit_",
    correlationId: vars.frk_tracking.correlationId,
    serviceId: vars.frk_tracking.serviceId,
    transactionName: vars.frk_tracking.transactionName,    
    isRootTransaction: vars.frk_tracking.isRootTransaction,

    applicationName: vars.frk_serviceContext.applicationName,
    applicationInstance: vars.frk_serviceContext.applicationInstance,
    applicationVersion: vars.frk_serviceContext.applicationVersion,
    serviceName: vars.frk_serviceContext.serviceName,
    serviceType: vars.frk_serviceContext.serviceType,
    env: vars.frk_serviceContext.env,
	serviceStatus: vars.frk_serviceStatus,
    
    logTimestamp: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ" },
    logRole: "ERROR",
    logStep:"ERROR",
    logText: vars.frk_exception.errorDescription,
    (msgPayloadId: vars.frk_tracking.serviceId) if (vars.frk_messagePayload != null and vars.frk_logPayloadLogic == 'ONERROR'),
    error: write(vars.frk_exception, "application/json"),

	(businessKeys:(
					vars.frk_logError_in.businessKeys map (item,index) -> {nvp: (item.name) ++ "=" ++ item.value}
				   ).nvp joinBy ","
	) if(vars.frk_logError_in.businessKeys? and sizeOf(vars.frk_logError_in.businessKeys)>0),
}]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<logger level="ERROR" doc:name="LogError" doc:id="b86e009c-366b-4d84-9964-4433e3c96642" message="#[vars.frk_logError]" category="${common.audit.log4jLogger}"/>
				<remove-variable doc:name="Remove frk_logError" doc:id="1b68929b-ac94-4327-b46b-1c82468a67dc" variableName="frk_logError"/>
				<choice doc:name="Choice" doc:id="a9c9a2b9-9a2c-4c40-8af7-9b8230f6e63c">
			<when expression="#[vars.frk_messagePayload != null and vars.frk_logPayloadLogic == 'ONERROR']">
				<flow-ref doc:name="frk-logInboundPayload" doc:id="320db576-fd4c-479f-8439-b278c9fd2b32" name="frk-logInboundPayload" />
			</when>
		</choice>
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="b7e5da0e-0708-4fe9-be9d-6f381cee1d6b" >
			<when expression="#[vars.frk_logError_in != null]">
				<remove-variable doc:name="Remove frk_logError_in" doc:id="a507f4ff-a74b-477f-99b2-572749d3a80f" variableName="frk_logError_in" />
			</when>
		</choice>
	</flow>
	<flow name="frk-logAudit" doc:id="ed7dfe63-b4fb-41ae-9a35-12717e4304b3" >
		<choice doc:name="Choice" doc:id="d05a5609-c695-476f-981e-778e14872eb1" >
			<when expression="((vars.frk_logAudit_in.logRole == 'INFO' or vars.frk_logAudit_in.logRole==null) and ${common.audit.role.logInfo}) or (vars.frk_logAudit_in.logRole == 'WARNING' and ${common.audit.role.logWarning}) or (vars.frk_logAudit_in.logRole == 'ERROR' and ${common.audit.role.logError}) or (vars.frk_logAudit_in.logRole == 'DEBUG' and ${common.audit.role.logDebug})">
				<ee:transform doc:name="MapLog" doc:id="669d548d-d538-4b0c-bb4b-c3103736950b">
			<ee:message>
			</ee:message>
					<ee:variables >
						<ee:set-variable variableName="frk_logAudit" ><![CDATA[%dw 2.0
output application/json indent=false, skipNullOn="everywhere"
---
{
	logType: "_frk_mule_service_audit_",
    correlationId: vars.frk_tracking.correlationId,
    serviceId: vars.frk_tracking.serviceId,
    transactionName: vars.frk_tracking.transactionName,    
    isRootTransaction: vars.frk_tracking.isRootTransaction,

    applicationName: vars.frk_serviceContext.applicationName,
    applicationInstance: vars.frk_serviceContext.applicationInstance,
    applicationVersion: vars.frk_serviceContext.applicationVersion,
    serviceName: vars.frk_serviceContext.serviceName,
    serviceType: vars.frk_serviceContext.serviceType,
    env: vars.frk_serviceContext.env,
	serviceStatus: vars.frk_serviceStatus,
    
    logTimestamp: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ" },
    logRole: if (vars.frk_logAudit_in.logRole?)
        vars.frk_logAudit_in.logRole
    else
        'INFO',

    logStep: if (vars.frk_logAudit_in.logStep?)
        vars.frk_logAudit_in.logStep
    else
        'AUDIT',
    (logText: vars.frk_logAudit_in.logText) if(vars.frk_logAudit_in.logText?),  
		
	(businessKeys:(
					vars.frk_logAudit_in.businessKeys map (item,index) -> {nvp: (item.name) ++ "=" ++ item.value}
				   ).nvp joinBy ","
	) if(vars.frk_logAudit_in.businessKeys? and sizeOf(vars.frk_logAudit_in.businessKeys)>0)
}]]></ee:set-variable>
					</ee:variables>
		</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="7dbd90de-c465-4fce-810f-e5e270f975ce" message="#[vars.frk_logAudit]" category="${common.audit.log4jLogger}"/>
				<remove-variable doc:name="Remove frk_logAudit" doc:id="839926dc-f78f-4c76-825a-23a318b78cbe" variableName="frk_logAudit" />
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="fa9fc444-8599-45f8-88b1-863acb181d4d" >
			<when expression="#[vars.frk_logAudit_in != null]">
				<remove-variable doc:name="Remove frk_logAudit_in" doc:id="805a26be-a968-418a-a52f-9a381031a56d" variableName="frk_logAudit_in" />
			</when>
		</choice>
	</flow>
	<flow name="frk-logAuditClob" doc:id="7a686742-f149-4184-a9f0-d589aeac7e2d">
		<choice doc:name="Choice" doc:id="16312422-58f2-4528-aeda-09f8a490a156">
			<when expression=" ${common.audit.role.logClob}">
				<set-variable value="#[(java!java::util::UUID::randomUUID() as String) replace /-/ with '']" doc:name="SetClobId" doc:id="25de5b99-6458-4466-a5f7-f7bea7857ddd" variableName="clobId" />
				<ee:transform doc:name="MapLog" doc:id="089d4b46-03ff-4c10-9e98-8667dd027d39">
					<ee:message />
					<ee:variables>
						<ee:set-variable variableName="frk_logAuditClob"><![CDATA[%dw 2.0
output application/json indent=false, skipNullOn="everywhere"
---
{
	logType: "_frk_mule_service_audit_",
    correlationId: vars.frk_tracking.correlationId,
    serviceId: vars.frk_tracking.serviceId,
    transactionName: vars.frk_tracking.transactionName,    
    isRootTransaction: vars.frk_tracking.isRootTransaction,

    applicationName: vars.frk_serviceContext.applicationName,
    applicationInstance: vars.frk_serviceContext.applicationInstance,
    applicationVersion: vars.frk_serviceContext.applicationVersion,
    serviceName: vars.frk_serviceContext.serviceName,
    serviceType: vars.frk_serviceContext.serviceType,
    env: vars.frk_serviceContext.env,
	serviceStatus: vars.frk_serviceStatus,
    
    logTimestamp: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ" },
    logRole: 'INFO',
    logStep: if (vars.frk_logAuditClob_in.logStep?)
        vars.frk_logAuditClob_in.logStep
    else
        'AUDIT_CLOB',
    (logText: vars.frk_logAuditClob_in.logText) if(vars.frk_logAuditClob_in.logText?),  
	(clobId: vars.clobId) if (vars.frk_logAuditClob_in.clob != null),
	(businessKeys:	(
						vars.frk_logAuditClob_in.businessKeys map (item,index) -> {nvp: (item.name) ++ "=" ++ item.value}
					).nvp joinBy ","
	) if(vars.frk_logAuditClob_in.businessKeys? and sizeOf(vars.frk_logAuditClob_in.businessKeys)>0)
}
]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="8397a198-83aa-4bb2-bf96-c6bb9e03c7bf" message="#[vars.frk_logAuditClob]" category="${common.audit.log4jLogger}" />
				<remove-variable doc:name="Remove frk_logAuditClob" doc:id="4e441302-dc0f-4357-91b5-9aa7469e0af8" variableName="frk_logAuditClob" />
				<choice doc:name="Choice" doc:id="8960987d-6f55-4650-8873-2e69556163e7">
					<when expression="vars.frk_logAuditClob_in.clob != null">
						<set-variable value="#[%dw 2.0
output application/java
---
{
	clobId: vars.clobId,
	mimeType: vars.frk_logAuditClob_in.clobMimeType,
	clob: vars.frk_logAuditClob_in.clob
}]" doc:name="Set frk_logClob_in" doc:id="56f829ac-a752-49cd-846f-691205270d9e" variableName="frk_logClob_in" />
						<flow-ref doc:name="frk-logClob" doc:id="5630a6d0-001e-4ea0-9ce1-75bfa916e25b" name="frk-logClob" />
					</when>
				</choice>
				<remove-variable doc:name="Remove clobId" doc:id="daef7d5c-87f1-4b04-8eed-39af3425a4e0" variableName="clobId" />
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="efd6c6a2-c1c8-4a18-90ac-8d5f8ccc6756" >
			<when expression="#[vars.frk_logAuditClob_in != null]">
				<remove-variable doc:name="Remove frk_logAuditClob_in" doc:id="cff5a66a-7d95-4b0b-b86d-a50940939bc1" variableName="frk_logAuditClob_in" />
			</when>
		</choice>
	</flow>
	<flow name="frk-logErrorWarning" doc:id="b2e33057-fd8e-4e8e-a95c-4fdd2e2fdedf" >
		<set-variable value="#['warning']" doc:name="frk_serviceStatus" doc:id="ebc47dc3-85f2-4e95-8c51-6c9333e5cff8" variableName="frk_serviceStatus" />
		<choice doc:name="Choice" doc:id="83659487-2280-464f-933f-47e84dca17bc" >
			<when expression="${common.audit.role.logWarning}" >
				<ee:transform doc:name="MapLog" doc:id="4ff17a0a-709e-4734-9dfc-0990812b7ef2" >
					<ee:message />
					<ee:variables >
						<ee:set-variable variableName="frk_logErrorWarning" ><![CDATA[%dw 2.0
output application/json indent=false, skipNullOn="everywhere"
---
{
	logType: "_frk_mule_service_audit_",
    correlationId: vars.frk_tracking.correlationId,
    serviceId: vars.frk_tracking.serviceId,
    transactionName: vars.frk_tracking.transactionName,    
    isRootTransaction: vars.frk_tracking.isRootTransaction,

    applicationName: vars.frk_serviceContext.applicationName,
    applicationInstance: vars.frk_serviceContext.applicationInstance,
    applicationVersion: vars.frk_serviceContext.applicationVersion,
    serviceName: vars.frk_serviceContext.serviceName,
    serviceType: vars.frk_serviceContext.serviceType,
    env: vars.frk_serviceContext.env,
	serviceStatus: vars.frk_serviceStatus,
    
    logTimestamp: now() as String { format: "yyyy-MM-dd'T'HH:mm:ss.SSSZ" },
    logRole: "WARNING",
    logStep:"AUDIT",
    logText: vars.frk_exception.errorDescription,
    error: write(vars.frk_exception, "application/json"),
	(businessKeys:(
					vars.frk_logErrorWarning_in.businessKeys map (item,index) -> {nvp: (item.name) ++ "=" ++ item.value}
				   ).nvp joinBy ","
	) if(vars.frk_logErrorWarning_in.businessKeys? and sizeOf(vars.frk_logErrorWarning_in.businessKeys)>0)
}]]></ee:set-variable>
					</ee:variables>
				</ee:transform>
				<logger level="WARN" doc:name="LogErrorWarning" doc:id="e9754a13-02c9-4a2f-b954-15504fc52ecb" message="#[vars.frk_logErrorWarning]" category="${common.audit.log4jLogger}"/>
				<remove-variable doc:name="Remove frk_logErrorWarning" doc:id="4afdf3b9-576f-4b9d-b27b-f908a1c3ca33" variableName="frk_logErrorWarning" />
			</when>
		</choice>
		<choice doc:name="Choice" doc:id="9ec2efcd-1464-4d16-bcda-4175e7f74d61" >
			<when expression="#[vars.frk_logErrorWarning_in != null]">
				<remove-variable doc:name="Remove frk_logErrorWarning_in" doc:id="ebab7d66-643a-4eb1-bf32-29310c0307a8" variableName="frk_logErrorWarning_in" />
			</when>
		</choice>
	</flow>
	<flow name="frk-logInboundPayload" doc:id="4da204b1-7bab-4fa5-bbe1-498e65e09b67" >
		<async doc:name="Async" doc:id="da9ad4d0-a7e1-4425-b07a-6c720ad15b0f" >
			<choice doc:name="Choice" doc:id="855e6c34-7dd0-4259-b541-32543bb34154" >
				<when expression="#[vars.frk_messagePayload.^mimeType == 'application/json'
or vars.frk_messagePayload.^mimeType == 'application/csv'
or vars.frk_messagePayload.^mimeType == 'application/xml'
or vars.frk_messagePayload.^mimeType == 'text/plain']" >
					<set-variable value="#[%dw 2.0
output application/json indent=true, skipNullOn=&quot;everywhere&quot;
---
{
	payloadId: vars.frk_tracking.serviceId,
	logTimestamp: now() as String { format: &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot; },
	correlationId: vars.frk_tracking.correlationId,
	serviceId: vars.frk_tracking.serviceId,
	payloadKind: &quot;inbound&quot;,
	payloadMimeType: vars.frk_messagePayload.^mimeType,
	payloadString: if (vars.frk_messagePayload.^mimeType == 'application/json')
	write(vars.frk_messagePayload, 'application/json', {indent:true, skipNullOn: &quot;everywhere&quot;})
else if (vars.frk_messagePayload.^mimeType == 'application/csv')
	write(vars.frk_messagePayload, 'application/csv')
else if (vars.frk_messagePayload.^mimeType == 'application/xml')
	write(vars.frk_messagePayload, 'application/xml', {indent:true})
else if (vars.frk_messagePayload.^mimeType == 'text/plain' )
	write(vars.frk_messagePayload, 'text/plain')
else &quot;unsupported_body_mime_type&quot;
}]" doc:name="SetESDocument" doc:id="5cd32b21-9aae-4ed6-8bf8-24b9e9a5df6c" variableName="ESDocument_payload" />
					<choice doc:name="Choice" doc:id="99480d90-0968-4660-b644-0d99ef2bb355">
						<when expression='#[p("common.audit.logClobType") == "remote"]'>
							<flow-ref doc:name="readAzureEvtHubToken" doc:id="7598f26d-b957-4988-bd6e-3f753c2aa28a" name="readAzureEvtHubToken" />
							<http:request method="POST" doc:name="Post service-audit-payload" doc:id="5ea298e2-5eef-4618-b590-b3e5e32d8228" config-ref="HTTP_Post_Payload" path="${common.audit.logPayloadServerUrl}" >
								<http:body ><![CDATA[#[vars.ESDocument_payload]]]></http:body>
								<http:headers ><![CDATA[#[output application/java
---
{
	"Authorization" : vars.sharedAccessSignature,
	"Content-Type" : "application/json",
	"ContentType" : "application/atom+xml;type=entry;charset=utf-8"
}]]]></http:headers>
							</http:request>
						</when>
						<otherwise >
							<logger level="INFO" doc:name="Logger" doc:id="9a56c8c1-e377-44de-a43e-981e40a74d38" category="${common.audit.log4jLogger}" message="#[vars.ESDocument_payload]"/>
						</otherwise>
					</choice>
					<remove-variable doc:name="Remove ESDocument" doc:id="fb3ee363-2132-419a-9959-140cf53137c3" variableName="ESDocument_payload" />
				
</when>
			</choice>
		</async>
		<error-handler>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="78dbd0e7-21ae-471c-83e1-621137e22077" type="ANY">
				<logger level="WARN" doc:name="Log local Warning" doc:id="d7b88f3c-128c-4a48-9dd2-b240c5d2e849" message="An inbound message payload could not be sent to external server." />
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="frk-logClob" doc:id="7c3c1897-76ef-41dd-bd0b-f283d0059cf9" >
		<async doc:name="Async" doc:id="04486bce-439d-422c-ba4d-cf3537e1fe87" >
			<choice doc:name="Choice" doc:id="14bc728f-0448-4d2c-bde7-2b105d88b3ea" >
				<when expression="#[vars.frk_logClob_in.mimeType == 'application/json'
or vars.frk_logClob_in.mimeType == 'application/csv'
or vars.frk_logClob_in.mimeType == 'application/xml'
or vars.frk_logClob_in.mimeType == 'text/plain']" >
					<set-variable value="#[%dw 2.0
output application/json indent=true, skipNullOn=&quot;everywhere&quot;
---
{
	payloadId: vars.frk_logClob_in.clobId,
	logTimestamp: now() as String { format: &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZ&quot; },
	correlationId: vars.frk_tracking.correlationId,
	serviceId: vars.frk_tracking.serviceId,
	payloadKind: &quot;any&quot;,
	payloadMimeType: vars.frk_logClob_in.mimeType,
	payloadString: if (vars.frk_logClob_in.mimeType == 'application/json')
	write(vars.frk_logClob_in.clob, 'application/json', {indent:true, skipNullOn: &quot;everywhere&quot;})
else if (vars.frk_logClob_in.mimeType == 'application/csv')
	write(vars.frk_logClob_in.clob, 'application/csv')
else if (vars.frk_logClob_in.mimeType == 'application/xml')
	write(vars.frk_logClob_in.clob, 'application/xml', {indent:true})
else if (vars.frk_logClob_in.mimeType == 'text/plain' )
	write(vars.frk_logClob_in.clob, 'text/plain')
else &quot;unsupported_body_mime_type&quot;
}]" doc:name="SetESDocument" doc:id="d3d0fd37-fedd-45f7-a018-35d5fbdd062d" variableName="ESDocument_clob" />
					<choice doc:name="Choice" doc:id="a3b40a63-08de-4383-9764-ac64852eeb89">
						<when expression='#[p("common.audit.logClobType") == "remote"]'>
							<flow-ref doc:name="readAzureEvtHubToken" doc:id="9b0e72d9-c677-4ccb-9f22-1659b59b96ea" name="readAzureEvtHubToken"/>
							<http:request method="POST" doc:name="Post service-audit-payload" doc:id="73453409-39c6-45c6-9c03-8ecbb4db5a5c" config-ref="HTTP_Post_Payload" path="${common.audit.logPayloadServerUrl}">
						<http:body><![CDATA[#[vars.ESDocument_clob]]]></http:body>
						<http:headers><![CDATA[#[output application/java
---
{
	"Authorization" : vars.sharedAccessSignature,
	"Content-Type" : "application/json",
	"ContentType" : "application/atom+xml;type=entry;charset=utf-8"
}]]]></http:headers>
					</http:request>
						</when>
						<otherwise >
							<logger level="INFO" doc:name="Logger" doc:id="1d3f70a5-46fd-4202-98c3-d00beea71148" message="#[vars.ESDocument_clob]" category="${common.audit.log4jLogger}" />
						</otherwise>
					</choice>
					<remove-variable doc:name="Remove ESDocument" doc:id="81f2e5de-9368-4580-843c-6b5ec4fcf44e" variableName="ESDocument_clob" />
				
</when>
			</choice>
			<choice doc:name="Choice" doc:id="36deb169-54ae-4d54-ab65-243f759207c2" >
				<when expression="#[vars.frk_logClob_in != null]">
					<remove-variable doc:name="Remove frk_logClob_in" doc:id="0b3c6c22-451a-49ef-a2ac-fcb856729ab8" variableName="frk_logClob_in" />
				</when>
			</choice>
		</async>
		<error-handler>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="8cdef290-5953-47a9-b619-c0dd0a6ce4f5" >
				<logger level="WARN" doc:name="Log local Warning" doc:id="2f37ffba-3643-4d9b-a18b-09fcd24f2414" message="A CLOB log could not be sent to external server." />
			</on-error-continue>
		</error-handler>
	</flow>

<flow name="readAzureEvtHubToken" doc:id="cec14409-87c5-484e-8c70-056020b182a8" maxConcurrency="1">
		<os:retrieve doc:name="Retrieve" doc:id="44f8e806-c794-423d-a579-e6abaeef51bc" key="mule.common.azure.eventhub.token" objectStore="mule-common-ObjectStore" target="sharedAccessSignature">
			<os:default-value ><![CDATA[#["_NULL_"]]]></os:default-value>
		</os:retrieve>
		<choice doc:name="Choice" doc:id="a6af4760-429f-44ed-a23c-469dff436047" >
			<when expression='#[vars.sharedAccessSignature == "_NULL_"]'>
				<java:invoke-static doc:name="Invoke static" doc:id="e1f669f6-b784-46a4-abc3-629e69e4842a" class="com.boulanger.mulesoft.plugin.common.SASToken" target="sharedAccessSignature" method="GetSASToken(java.lang.String,java.lang.String,java.lang.String,long)">
					<java:args ><![CDATA[#[{
  resourceUri: "https://" ++ p("common.audit.logPayloadServerHost") ++ ":" ++ p("common.audit.logPayloadServerPort") ++ "/" ++ p("common.audit.logPayloadServerUrl"),
  keyName: p("common.audit.logPayloadServerKeyName"),
  key: p("common.audit.logPayloadServerKey"),
  durationSec: 3600
}]]]></java:args>
				</java:invoke-static>
				<os:store doc:name="Store" doc:id="f994126d-c9fd-4f68-9ab8-17cfd2fb53c0" key="mule.common.azure.eventhub.token" objectStore="mule-common-ObjectStore">
					<os:value ><![CDATA[#[vars.sharedAccessSignature]]]></os:value>
				</os:store>
			</when>
		</choice>
	</flow>
	
	<os:config name="mule-common-ObjectStoreConfig" doc:name="ObjectStore Config" doc:id="921d1da3-4228-45d2-a9f4-dd08be8da7d9" />
	<os:object-store name="mule-common-ObjectStore" doc:name="Object store" doc:id="67eea06b-b5a8-4e83-b306-a6f321a11e8a" entryTtl="58" config-ref="mule-common-ObjectStoreConfig" persistent="false" entryTtlUnit="MINUTES"/>


</mule>
